apply plugin: 'java'
apply plugin: "net.ltgt.apt"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: "com.github.maiflai.scalatest"

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "net.ltgt.gradle:gradle-apt-plugin:0.9"
    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    classpath "gradle.plugin.com.github.maiflai:gradle-scalatest:0.14"
  }
}

sourceCompatibility = 1.8
repositories {
    jcenter()
}
shadowJar {

    exclude 'META-INF/MANIFEST.MF'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'

    mergeServiceFiles()
}

assemble.dependsOn shadowJar

dependencies {
    compileOnly files("${System.properties['java.home']}/../lib/tools.jar")
    
    compile group: 'org.javassist', name: 'javassist', version: '3.21.0-GA'
    compile group: 'cglib', name: 'cglib', version: '3.2.4'
    compile group: 'net.bytebuddy', name: 'byte-buddy-dep', version: '1.5.10'
    compile 'org.scala-lang:scala-library:2.11.8'
    
    testCompile 'com.google.testing.compile:compile-testing:0.10'
    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.11:3.0.0'
    
    testRuntime 'org.pegdown:pegdown:1.6.0'
    testRuntime files("${System.properties['java.home']}/../lib/tools.jar")
}
task testBuild(type: Exec, dependsOn: jar) {
    def javassist = configurations
                        .compile
                        .find {it.name =~ /javassist.*\.jar/}
                        .absolutePath
    def scalalib = configurations
                        .compile
                        .find {it.name =~ /scala-library.*\.jar/}
                        .absolutePath
    def jarFile = jar.archivePath
    commandLine('javac', '-cp', scalalib.toString()+";"+javassist.toString()+";"+jarFile.toString(), "fixture/Test.java")
}